{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3000/api'; // Adjust this URL to match your server\n\nexport const fetchForms = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/feedback`, {\n      timeout: 5000\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.error('Error response:', error.response.data);\n      console.error('Error status:', error.response.status);\n      console.error('Error headers:', error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      console.error('No response received:', error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.error('Error setting up the request:', error.message);\n    }\n    console.error('Error config:', error.config);\n    throw error;\n  }\n};\nexport const fetchFormById = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/feedback/${id}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching form by id:', error);\n    throw error;\n  }\n};\n\n// You can keep the publishForm and fetchAnalyticsData functions as they are,\n// or implement them later when you have the corresponding backend endpoints.\n\nexport const publishForm = async formData => {\n  // Implement this when you have the corresponding backend endpoint\n};\nexport const fetchAnalyticsData = async () => {\n  // Implement this when you have the corresponding backend endpoint\n};","map":{"version":3,"names":["axios","API_URL","fetchForms","response","get","timeout","data","error","console","status","headers","request","message","config","fetchFormById","id","publishForm","formData","fetchAnalyticsData"],"sources":["D:/my-form/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:3000/api'; // Adjust this URL to match your server\r\n\r\nexport const fetchForms = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/feedback`, { timeout: 5000 });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n      console.error('Error response:', error.response.data);\r\n      console.error('Error status:', error.response.status);\r\n      console.error('Error headers:', error.response.headers);\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error('No response received:', error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error('Error setting up the request:', error.message);\r\n    }\r\n    console.error('Error config:', error.config);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const fetchFormById = async (id) => {\r\n  try {\r\n    const response = await axios.get(`${API_URL}/feedback/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching form by id:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// You can keep the publishForm and fetchAnalyticsData functions as they are,\r\n// or implement them later when you have the corresponding backend endpoints.\r\n\r\nexport const publishForm = async (formData) => {\r\n  // Implement this when you have the corresponding backend endpoint\r\n};\r\n\r\nexport const fetchAnalyticsData = async () => {\r\n  // Implement this when you have the corresponding backend endpoint\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,WAAW,EAAE;MAAEI,OAAO,EAAE;IAAK,CAAC,CAAC;IAC1E,OAAOF,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACJ,QAAQ,EAAE;MAClB;MACA;MACAK,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACJ,QAAQ,CAACG,IAAI,CAAC;MACrDE,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACJ,QAAQ,CAACM,MAAM,CAAC;MACrDD,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACJ,QAAQ,CAACO,OAAO,CAAC;IACzD,CAAC,MAAM,IAAIH,KAAK,CAACI,OAAO,EAAE;MACxB;MACAH,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACI,OAAO,CAAC;IACvD,CAAC,MAAM;MACL;MACAH,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACK,OAAO,CAAC;IAC/D;IACAJ,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACM,MAAM,CAAC;IAC5C,MAAMN,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMO,aAAa,GAAG,MAAOC,EAAE,IAAK;EACzC,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,aAAac,EAAE,EAAE,CAAC;IAC7D,OAAOZ,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA;;AAEA,OAAO,MAAMS,WAAW,GAAG,MAAOC,QAAQ,IAAK;EAC7C;AAAA,CACD;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C;AAAA,CACD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
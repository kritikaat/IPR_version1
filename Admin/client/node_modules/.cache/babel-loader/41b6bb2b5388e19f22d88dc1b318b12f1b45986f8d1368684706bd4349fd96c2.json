{"ast":null,"code":"// server.js\nconst express = require('express');\nconst cors = require('cors');\nconst bodyParser = require('body-parser');\nconst app = express();\nconst PORT = 3000;\napp.use(cors());\napp.use(bodyParser.json());\n\n// Sample data\nlet feedbackData = [{\n  id: 1,\n  formId: 1,\n  institutionName: \"Institution A\"\n}, {\n  id: 2,\n  formId: 1,\n  institutionName: \"Institution B\"\n}];\nlet ratingsData = [{\n  id: 1,\n  formId: 1,\n  score: 4,\n  comment: \"Good event!\"\n}, {\n  id: 2,\n  formId: 1,\n  score: 5,\n  comment: \"Excellent!\"\n}];\n\n// Get feedback by formId\napp.get('/feedback/:formId', (req, res) => {\n  const {\n    formId\n  } = req.params;\n  const feedback = feedbackData.filter(item => item.formId === parseInt(formId));\n  if (feedback.length > 0) {\n    res.json(feedback);\n  } else {\n    res.status(404).json({\n      message: 'No feedback found for this form ID.'\n    });\n  }\n});\n\n// Get ratings by formId\napp.get('/ratings/:formId', (req, res) => {\n  const {\n    formId\n  } = req.params;\n  const ratings = ratingsData.filter(item => item.formId === parseInt(formId));\n  if (ratings.length > 0) {\n    res.json(ratings);\n  } else {\n    res.status(404).json({\n      message: 'No ratings found for this form ID.'\n    });\n  }\n});\n\n// Start the server\napp.listen(PORT, () => {\n  console.log(`Server is running on http://localhost:${PORT}`);\n});","map":{"version":3,"names":["express","require","cors","bodyParser","app","PORT","use","json","feedbackData","id","formId","institutionName","ratingsData","score","comment","get","req","res","params","feedback","filter","item","parseInt","length","status","message","ratings","listen","console","log"],"sources":["D:/my-form/client/src/services/feedbackapi.js"],"sourcesContent":["// server.js\r\nconst express = require('express');\r\nconst cors = require('cors');\r\nconst bodyParser = require('body-parser');\r\n\r\nconst app = express();\r\nconst PORT = 3000;\r\n\r\napp.use(cors());\r\napp.use(bodyParser.json());\r\n\r\n// Sample data\r\nlet feedbackData = [\r\n  { id: 1, formId: 1, institutionName: \"Institution A\" },\r\n  { id: 2, formId: 1, institutionName: \"Institution B\" },\r\n];\r\n\r\nlet ratingsData = [\r\n  { id: 1, formId: 1, score: 4, comment: \"Good event!\" },\r\n  { id: 2, formId: 1, score: 5, comment: \"Excellent!\" },\r\n];\r\n\r\n// Get feedback by formId\r\napp.get('/feedback/:formId', (req, res) => {\r\n  const { formId } = req.params;\r\n  const feedback = feedbackData.filter(item => item.formId === parseInt(formId));\r\n  if (feedback.length > 0) {\r\n    res.json(feedback);\r\n  } else {\r\n    res.status(404).json({ message: 'No feedback found for this form ID.' });\r\n  }\r\n});\r\n\r\n// Get ratings by formId\r\napp.get('/ratings/:formId', (req, res) => {\r\n  const { formId } = req.params;\r\n  const ratings = ratingsData.filter(item => item.formId === parseInt(formId));\r\n  if (ratings.length > 0) {\r\n    res.json(ratings);\r\n  } else {\r\n    res.status(404).json({ message: 'No ratings found for this form ID.' });\r\n  }\r\n});\r\n\r\n// Start the server\r\napp.listen(PORT, () => {\r\n  console.log(`Server is running on http://localhost:${PORT}`);\r\n});\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AAEzC,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AACrB,MAAMK,IAAI,GAAG,IAAI;AAEjBD,GAAG,CAACE,GAAG,CAACJ,IAAI,CAAC,CAAC,CAAC;AACfE,GAAG,CAACE,GAAG,CAACH,UAAU,CAACI,IAAI,CAAC,CAAC,CAAC;;AAE1B;AACA,IAAIC,YAAY,GAAG,CACjB;EAAEC,EAAE,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,eAAe,EAAE;AAAgB,CAAC,EACtD;EAAEF,EAAE,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEC,eAAe,EAAE;AAAgB,CAAC,CACvD;AAED,IAAIC,WAAW,GAAG,CAChB;EAAEH,EAAE,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEG,KAAK,EAAE,CAAC;EAAEC,OAAO,EAAE;AAAc,CAAC,EACtD;EAAEL,EAAE,EAAE,CAAC;EAAEC,MAAM,EAAE,CAAC;EAAEG,KAAK,EAAE,CAAC;EAAEC,OAAO,EAAE;AAAa,CAAC,CACtD;;AAED;AACAV,GAAG,CAACW,GAAG,CAAC,mBAAmB,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACzC,MAAM;IAAEP;EAAO,CAAC,GAAGM,GAAG,CAACE,MAAM;EAC7B,MAAMC,QAAQ,GAAGX,YAAY,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACX,MAAM,KAAKY,QAAQ,CAACZ,MAAM,CAAC,CAAC;EAC9E,IAAIS,QAAQ,CAACI,MAAM,GAAG,CAAC,EAAE;IACvBN,GAAG,CAACV,IAAI,CAACY,QAAQ,CAAC;EACpB,CAAC,MAAM;IACLF,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACjB,IAAI,CAAC;MAAEkB,OAAO,EAAE;IAAsC,CAAC,CAAC;EAC1E;AACF,CAAC,CAAC;;AAEF;AACArB,GAAG,CAACW,GAAG,CAAC,kBAAkB,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACxC,MAAM;IAAEP;EAAO,CAAC,GAAGM,GAAG,CAACE,MAAM;EAC7B,MAAMQ,OAAO,GAAGd,WAAW,CAACQ,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACX,MAAM,KAAKY,QAAQ,CAACZ,MAAM,CAAC,CAAC;EAC5E,IAAIgB,OAAO,CAACH,MAAM,GAAG,CAAC,EAAE;IACtBN,GAAG,CAACV,IAAI,CAACmB,OAAO,CAAC;EACnB,CAAC,MAAM;IACLT,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACjB,IAAI,CAAC;MAAEkB,OAAO,EAAE;IAAqC,CAAC,CAAC;EACzE;AACF,CAAC,CAAC;;AAEF;AACArB,GAAG,CAACuB,MAAM,CAACtB,IAAI,EAAE,MAAM;EACrBuB,OAAO,CAACC,GAAG,CAAC,yCAAyCxB,IAAI,EAAE,CAAC;AAC9D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
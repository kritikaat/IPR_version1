{"ast":null,"code":"var _jsxFileName = \"D:\\\\iprexh\\\\client\\\\src\\\\components\\\\iprexhibition.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useReducer } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\"; //\n\n// Define all steps with unique IDs for each field\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = [{\n  title: \"Hall for Exhibition\",\n  fields: [{\n    id: 'hallDimension',\n    label: 'Hall Dimension',\n    required: true,\n    type: \"text\",\n    helperText: \"Dimension of the hall (LxB in meters). As large as possible (Min 15mx15m)\"\n  }, {\n    id: 'isEnclosedHall',\n    label: \"Is it an enclosed hall?\",\n    required: true,\n    type: \"text\",\n    helperText: \"Enclosed hall required for safety\"\n  }, {\n    id: 'canBeDarkened',\n    label: \"Can the hall be darkened with curtains?\",\n    required: true,\n    type: \"text\",\n    helperText: \"Hall should be dark to be able to see plasma properly\"\n  }, {\n    id: 'hasCooling',\n    label: \"Does the hall have A/C or fans?\",\n    required: true,\n    type: \"text\",\n    helperText: \"Cooling is required to keep working models cool\"\n  }, {\n    id: 'isGroundFloor',\n    label: \"Is it on the ground floor?\",\n    required: true,\n    type: \"text\",\n    helperText: \"Preferably on ground floor for easy unloading\"\n  }, {\n    id: 'hasStorageSpace',\n    label: \"Is there storage space for empty exhibit boxes?\",\n    required: true,\n    type: \"text\",\n    helperText: \"Storage space is preferable for easy management\"\n  }, {\n    id: 'powerOutlets',\n    label: \"No. of 230V (5/15A) power outlets in the hall\",\n    required: true,\n    type: \"text\",\n    helperText: \"Minimum 30 outlets needed\"\n  }, {\n    id: 'numTables',\n    label: \"Tables for placing the exhibits\",\n    required: true,\n    type: \"text\",\n    helperText: \"35 tables and 20 chairs needed\"\n  }, {\n    id: 'vrSpace',\n    label: \"Space for VR\",\n    required: true,\n    type: \"text\",\n    helperText: \"Min 3m x 3m for one VR exhibit\"\n  }, {\n    id: 'hasWifi',\n    label: \"WiFi Access\",\n    required: true,\n    type: \"text\",\n    helperText: \"WiFi access needed for team members\"\n  }]\n}, {\n  title: \"Hall for Lectures/Quiz/Tokotoy Competition\",\n  fields: [{\n    id: 'lectureHallArea',\n    label: \"Area of the hall\",\n    required: true,\n    type: \"text\",\n    helperText: \"Should be able to comfortably seat the audience\"\n  }, {\n    id: 'seatingCapacity',\n    label: \"Seating capacity\",\n    required: true,\n    type: \"text\",\n    helperText: \"Should be able to comfortably seat a minimum of 50 people\"\n  }, {\n    id: 'avFacilities',\n    label: \"Does the hall have A/V facilities?\",\n    required: true,\n    type: \"text\",\n    helperText: \"Requires digital projector (HDMI input) and audio system\"\n  }, {\n    id: 'distanceFromExhibition',\n    label: \"Distance of lecture hall from exhibition hall\",\n    required: true,\n    type: \"text\",\n    helperText: \"As close to the exhibition hall as possible\"\n  }]\n}, {\n  title: \"Logistics and Accommodation\",\n  fields: [{\n    id: 'accommodation',\n    label: \"Accommodation for IPR team\",\n    required: true,\n    type: \"text\",\n    helperText: \"8 rooms, A/C, single occupancy required\"\n  }, {\n    id: 'transportation',\n    label: \"Local transportation for IPR team\",\n    required: true,\n    type: \"text\",\n    helperText: \"For minimum 8 people - airport/railway station pickup/drop\"\n  }, {\n    id: 'truckParking',\n    label: \"Secure parking space for IPR truck\",\n    required: true,\n    type: \"text\",\n    helperText: \"Preferably within the campus\"\n  }, {\n    id: 'loadingManpower',\n    label: \"Manpower for loading/unloading\",\n    required: true,\n    type: \"text\",\n    helperText: \"At least FOUR persons needed\"\n  }]\n}, {\n  title: \"Event Poster Details\",\n  fields: [{\n    id: 'contactPerson',\n    label: \"Name of the contact person\",\n    required: true,\n    type: \"text\",\n    helperText: \"Will appear on event poster\"\n  }, {\n    id: 'contactMobile',\n    label: \"Mobile Number\",\n    required: true,\n    type: \"text\",\n    helperText: \"Will appear on event poster\"\n  }, {\n    id: 'contactEmail',\n    label: \"E-mail\",\n    required: true,\n    type: \"text\",\n    helperText: \"Will appear on event poster\"\n  }, {\n    id: 'venueLocation',\n    label: \"Location of the venue\",\n    required: true,\n    type: \"text\",\n    helperText: \"Full address including hall name, building, etc.\"\n  }]\n}, {\n  title: \"Teacher Training Program\",\n  fields: [{\n    id: 'teacherInvitation',\n    label: \"Invitation to teachers\",\n    required: true,\n    type: \"text\",\n    helperText: \"Minimum 25, Maximum 50 teachers\"\n  }, {\n    id: 'teacherRegistration',\n    label: \"Registration\",\n    required: true,\n    type: \"text\",\n    helperText: \"Minimum 25, Maximum 50\"\n  }, {\n    id: 'teacherMaterials',\n    label: \"Writing materials provision\",\n    required: true,\n    type: \"text\",\n    helperText: \"Writing pad/pen etc. for participants\"\n  }, {\n    id: 'teacherRefreshments',\n    label: \"Refreshments arrangement\",\n    required: true,\n    type: \"text\",\n    helperText: \"Tea/lunch arrangements for participants\"\n  }]\n}, {\n  title: \"Quiz Programme\",\n  fields: [{\n    id: 'quizParticipants',\n    label: \"Quiz participation details\",\n    required: true,\n    type: \"text\",\n    helperText: \"For school students (8-12 classes)\"\n  }, {\n    id: 'teamRegistration',\n    label: \"Team registration process\",\n    required: true,\n    type: \"text\",\n    helperText: \"Minimum 10 teams, 2 participants per team\"\n  }, {\n    id: 'quizArrangements',\n    label: \"Quiz arrangements\",\n    required: true,\n    type: \"text\",\n    helperText: \"Arrangements for organizing the quiz\"\n  }, {\n    id: 'quizRefreshments',\n    label: \"Refreshments for participants\",\n    required: true,\n    type: \"text\",\n    helperText: \"Arrangements for participants\"\n  }]\n}];\nconst initialState = steps.reduce((acc, step) => {\n  step.fields.forEach(field => {\n    acc[field.id] = '';\n  });\n  return acc;\n}, {});\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_FIELD':\n      return {\n        ...state,\n        [action.field]: action.value\n      };\n    case 'RESET_FORM':\n      return initialState;\n    default:\n      return state;\n  }\n};\nconst FormField = ({\n  id,\n  label,\n  required,\n  helperText,\n  value,\n  onChange,\n  error\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"mb-4\",\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    className: \"block font-semibold text-gray-700 mb-1\",\n    children: [label, \" \", required && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-red-500\",\n      children: \"*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    className: `w-full p-2 border rounded-lg ${error ? 'border-red-500' : 'border-gray-300'}`,\n    required: required,\n    value: value,\n    onChange: onChange,\n    placeholder: `Enter ${label.toLowerCase()}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-1 text-sm text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 13\n  }, this), helperText && /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"text-sm text-gray-600 mt-1\",\n    children: helperText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 24\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 89,\n  columnNumber: 5\n}, this);\n_c = FormField;\nconst IPRExForm = () => {\n  _s();\n  const [formData, dispatch] = useReducer(formReducer, initialState);\n  const navigate = useNavigate();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const validateStep = () => {\n    const currentFields = steps[currentStep].fields;\n    const newErrors = {};\n    let isValid = true;\n    currentFields.forEach(field => {\n      var _formData$field$id;\n      if (field.required && !((_formData$field$id = formData[field.id]) !== null && _formData$field$id !== void 0 && _formData$field$id.trim())) {\n        newErrors[field.id] = `${field.label} is required`;\n        isValid = false;\n      }\n    });\n    setErrors(newErrors);\n    return isValid;\n  };\n  const validateForm = () => {\n    const allErrors = {};\n    let isValid = true;\n    steps.forEach(step => {\n      step.fields.forEach(field => {\n        var _formData$field$id2;\n        if (field.required && !((_formData$field$id2 = formData[field.id]) !== null && _formData$field$id2 !== void 0 && _formData$field$id2.trim())) {\n          allErrors[field.id] = `${field.label} is required`;\n          isValid = false;\n        } else if (['powerOutlets', 'numTables', 'seatingCapacity', 'teacherInvitation', 'teacherRegistration'].includes(field.id) && isNaN(formData[field.id])) {\n          allErrors[field.id] = `${field.label} must be a number`;\n          isValid = false;\n        }\n      });\n    });\n    setErrors(allErrors);\n    return isValid;\n  };\n  const handleNext = () => {\n    if (validateStep()) {\n      setCurrentStep(prev => prev + 1);\n      window.scrollTo(0, 0);\n    } else {\n      toast.error(\"Please fill in all required fields before proceeding\");\n    }\n  };\n  const handlePrevious = () => {\n    setCurrentStep(prev => prev - 1);\n    window.scrollTo(0, 0);\n  };\n  const handleInputChange = (fieldId, value) => {\n    dispatch({\n      type: 'SET_FIELD',\n      field: fieldId,\n      value\n    });\n    if (errors[fieldId]) {\n      setErrors(prev => ({\n        ...prev,\n        [fieldId]: ''\n      }));\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      toast.error(\"Please fill in all required fields\");\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      // Transform the form data to match your backend's expected structure\n      const transformedData = {\n        hallDimension: formData.hallDimension,\n        isEnclosedHall: formData.isEnclosedHall,\n        // Adjust this line\n        canBeDarkened: formData.canBeDarkened,\n        hasCooling: formData.hasCooling,\n        isGroundFloor: formData.isGroundFloor,\n        hasStorageSpace: formData.hasStorageSpace,\n        powerOutlets: parseInt(formData.powerOutlets) || 0,\n        // Ensure it's an integer\n        numTables: parseInt(formData.numTables) || 0,\n        // Ensure it's an integer\n        vrSpace: formData.vrSpace,\n        hasWifi: formData.hasWifi,\n        lectureHallArea: formData.lectureHallArea,\n        seatingCapacity: parseInt(formData.seatingCapacity) || 0,\n        // Ensure it's an integer\n        hasAVFacilities: formData.hasAVFacilities,\n        distanceFromExhibition: formData.distanceFromExhibition,\n        accommodationProvided: formData.accommodationProvided,\n        localTransportation: formData.localTransportation,\n        secureParkingSpace: formData.secureParkingSpace,\n        manpowerForLoading: formData.manpowerForLoading,\n        contactPersonName: formData.contactPersonName,\n        contactPersonMobile: formData.contactPersonMobile,\n        contactPersonEmail: formData.contactPersonEmail,\n        venueLocation: formData.venueLocation,\n        teacherInvitation: parseInt(formData.teacherInvitation) || 0,\n        // Ensure it's an integer\n        teacherRegistration: parseInt(formData.teacherRegistration) || 0,\n        // Ensure it's an integer\n        providesWritingMaterials: formData.providesWritingMaterials,\n        providesRefreshments: formData.providesRefreshments,\n        quizForSchoolStudents: formData.quizForSchoolStudents,\n        quizTeamSelection: formData.quizTeamSelection,\n        quizArrangements: formData.quizArrangements,\n        quizRefreshments: formData.quizRefreshments\n      };\n      console.log('Submitting transformed data:', transformedData);\n      const response = await fetch('http://localhost:3000/iprexhibition', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(transformedData)\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || `Submission failed with status ${response.status}`);\n      }\n      toast.success(\"Form submitted successfully!\");\n      setTimeout(() => {\n        dispatch({\n          type: 'RESET_FORM'\n        });\n        navigate('/success');\n      }, 2000);\n    } catch (error) {\n      console.error('Submission error:', error);\n      toast.error(error.message || \"Error submitting form. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-gray-800\",\n        children: steps[currentStep].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 flex gap-2\",\n        children: steps.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `h-2 flex-1 rounded-full ${index <= currentStep ? 'bg-blue-500' : 'bg-gray-200'}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [steps[currentStep].fields.map(field => /*#__PURE__*/_jsxDEV(FormField, {\n        id: field.id,\n        label: field.label,\n        required: field.required,\n        helperText: field.helperText,\n        value: formData[field.id],\n        onChange: e => handleInputChange(field.id, e.target.value),\n        error: errors[field.id]\n      }, field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mt-6 pt-4 border-t border-gray-200\",\n        children: [currentStep > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handlePrevious,\n          className: \"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\",\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 25\n        }, this), currentStep < steps.length - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleNext,\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 9\n  }, this);\n};\n_s(IPRExForm, \"YkqL5al9a90otZZkSS8dRru7Xvs=\", false, function () {\n  return [useNavigate];\n});\n_c2 = IPRExForm;\nexport default IPRExForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormField\");\n$RefreshReg$(_c2, \"IPRExForm\");","map":{"version":3,"names":["React","useState","useReducer","useNavigate","toast","ToastContainer","jsxDEV","_jsxDEV","steps","title","fields","id","label","required","type","helperText","initialState","reduce","acc","step","forEach","field","formReducer","state","action","value","FormField","onChange","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","toLowerCase","_c","IPRExForm","_s","formData","dispatch","navigate","currentStep","setCurrentStep","errors","setErrors","isSubmitting","setIsSubmitting","validateStep","currentFields","newErrors","isValid","_formData$field$id","trim","validateForm","allErrors","_formData$field$id2","includes","isNaN","handleNext","prev","window","scrollTo","handlePrevious","handleInputChange","fieldId","handleSubmit","e","preventDefault","transformedData","hallDimension","isEnclosedHall","canBeDarkened","hasCooling","isGroundFloor","hasStorageSpace","powerOutlets","parseInt","numTables","vrSpace","hasWifi","lectureHallArea","seatingCapacity","hasAVFacilities","distanceFromExhibition","accommodationProvided","localTransportation","secureParkingSpace","manpowerForLoading","contactPersonName","contactPersonMobile","contactPersonEmail","venueLocation","teacherInvitation","teacherRegistration","providesWritingMaterials","providesRefreshments","quizForSchoolStudents","quizTeamSelection","quizArrangements","quizRefreshments","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","status","success","setTimeout","message","map","_","index","onSubmit","target","onClick","length","_c2","$RefreshReg$"],"sources":["D:/iprexh/client/src/components/iprexhibition.js"],"sourcesContent":["import React, { useState, useReducer } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\"; //\r\n\r\n// Define all steps with unique IDs for each field\r\nconst steps = [\r\n    {\r\n        title: \"Hall for Exhibition\",\r\n        fields: [\r\n            { id: 'hallDimension', label: 'Hall Dimension', required: true, type: \"text\", helperText: \"Dimension of the hall (LxB in meters). As large as possible (Min 15mx15m)\" },\r\n            { id: 'isEnclosedHall', label: \"Is it an enclosed hall?\", required: true, type: \"text\", helperText: \"Enclosed hall required for safety\" },\r\n            { id: 'canBeDarkened', label: \"Can the hall be darkened with curtains?\", required: true, type: \"text\", helperText: \"Hall should be dark to be able to see plasma properly\" },\r\n            { id: 'hasCooling', label: \"Does the hall have A/C or fans?\", required: true, type: \"text\", helperText: \"Cooling is required to keep working models cool\" },\r\n            { id: 'isGroundFloor', label: \"Is it on the ground floor?\", required: true, type: \"text\", helperText: \"Preferably on ground floor for easy unloading\" },\r\n            { id: 'hasStorageSpace', label: \"Is there storage space for empty exhibit boxes?\", required: true, type: \"text\", helperText: \"Storage space is preferable for easy management\" },\r\n            { id: 'powerOutlets', label: \"No. of 230V (5/15A) power outlets in the hall\", required: true, type: \"text\", helperText: \"Minimum 30 outlets needed\" },\r\n            { id: 'numTables', label: \"Tables for placing the exhibits\", required: true, type: \"text\", helperText: \"35 tables and 20 chairs needed\" },\r\n            { id: 'vrSpace', label: \"Space for VR\", required: true, type: \"text\", helperText: \"Min 3m x 3m for one VR exhibit\" },\r\n            { id: 'hasWifi', label: \"WiFi Access\", required: true, type: \"text\", helperText: \"WiFi access needed for team members\" }\r\n        ]\r\n    },\r\n    {\r\n        title: \"Hall for Lectures/Quiz/Tokotoy Competition\",\r\n        fields: [\r\n            { id: 'lectureHallArea', label: \"Area of the hall\", required: true, type: \"text\", helperText: \"Should be able to comfortably seat the audience\" },\r\n            { id: 'seatingCapacity', label: \"Seating capacity\", required: true, type: \"text\", helperText: \"Should be able to comfortably seat a minimum of 50 people\" },\r\n            { id: 'avFacilities', label: \"Does the hall have A/V facilities?\", required: true, type: \"text\", helperText: \"Requires digital projector (HDMI input) and audio system\" },\r\n            { id: 'distanceFromExhibition', label: \"Distance of lecture hall from exhibition hall\", required: true, type: \"text\", helperText: \"As close to the exhibition hall as possible\" }\r\n        ]\r\n    },\r\n    {\r\n        title: \"Logistics and Accommodation\",\r\n        fields: [\r\n            { id: 'accommodation', label: \"Accommodation for IPR team\", required: true, type: \"text\", helperText: \"8 rooms, A/C, single occupancy required\" },\r\n            { id: 'transportation', label: \"Local transportation for IPR team\", required: true, type: \"text\", helperText: \"For minimum 8 people - airport/railway station pickup/drop\" },\r\n            { id: 'truckParking', label: \"Secure parking space for IPR truck\", required: true, type: \"text\", helperText: \"Preferably within the campus\" },\r\n            { id: 'loadingManpower', label: \"Manpower for loading/unloading\", required: true, type: \"text\", helperText: \"At least FOUR persons needed\" }\r\n        ]\r\n    },\r\n    {\r\n        title: \"Event Poster Details\",\r\n        fields: [\r\n            { id: 'contactPerson', label: \"Name of the contact person\", required: true, type: \"text\", helperText: \"Will appear on event poster\" },\r\n            { id: 'contactMobile', label: \"Mobile Number\", required: true, type: \"text\", helperText: \"Will appear on event poster\" },\r\n            { id: 'contactEmail', label: \"E-mail\", required: true, type: \"text\", helperText: \"Will appear on event poster\" },\r\n            { id: 'venueLocation', label: \"Location of the venue\", required: true, type: \"text\", helperText: \"Full address including hall name, building, etc.\" }\r\n        ]\r\n    },\r\n    {\r\n        title: \"Teacher Training Program\",\r\n        fields: [\r\n            { id: 'teacherInvitation', label: \"Invitation to teachers\", required: true, type: \"text\", helperText: \"Minimum 25, Maximum 50 teachers\" },\r\n            { id: 'teacherRegistration', label: \"Registration\", required: true, type: \"text\", helperText: \"Minimum 25, Maximum 50\" },\r\n            { id: 'teacherMaterials', label: \"Writing materials provision\", required: true, type: \"text\", helperText: \"Writing pad/pen etc. for participants\" },\r\n            { id: 'teacherRefreshments', label: \"Refreshments arrangement\", required: true, type: \"text\", helperText: \"Tea/lunch arrangements for participants\" }\r\n        ]\r\n    },\r\n    {\r\n        title: \"Quiz Programme\",\r\n        fields: [\r\n            { id: 'quizParticipants', label: \"Quiz participation details\", required: true, type: \"text\", helperText: \"For school students (8-12 classes)\" },\r\n            { id: 'teamRegistration', label: \"Team registration process\", required: true, type: \"text\", helperText: \"Minimum 10 teams, 2 participants per team\" },\r\n            { id: 'quizArrangements', label: \"Quiz arrangements\", required: true, type: \"text\", helperText: \"Arrangements for organizing the quiz\" },\r\n            { id: 'quizRefreshments', label: \"Refreshments for participants\", required: true, type: \"text\", helperText: \"Arrangements for participants\" }\r\n        ]\r\n    }\r\n];\r\n\r\nconst initialState = steps.reduce((acc, step) => {\r\n    step.fields.forEach(field => {\r\n        acc[field.id] = '';\r\n    });\r\n    return acc;\r\n}, {});\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_FIELD':\r\n            return { ...state, [action.field]: action.value };\r\n        case 'RESET_FORM':\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst FormField = ({ id, label, required, helperText, value, onChange, error }) => (\r\n    <div className=\"mb-4\">\r\n        <label className=\"block font-semibold text-gray-700 mb-1\">\r\n            {label} {required && <span className=\"text-red-500\">*</span>}\r\n        </label>\r\n        <input\r\n            type=\"text\"\r\n            className={`w-full p-2 border rounded-lg ${error ? 'border-red-500' : 'border-gray-300'}`}\r\n            required={required}\r\n            value={value}\r\n            onChange={onChange}\r\n            placeholder={`Enter ${label.toLowerCase()}`}\r\n        />\r\n        {error && (\r\n            <div className=\"mt-1 text-sm text-red-500\">\r\n                {error}\r\n            </div>\r\n        )}\r\n        {helperText && <p className=\"text-sm text-gray-600 mt-1\">{helperText}</p>}\r\n    </div>\r\n);\r\n\r\nconst IPRExForm = () => {\r\n    const [formData, dispatch] = useReducer(formReducer, initialState);\r\n    const navigate = useNavigate();\r\n    const [currentStep, setCurrentStep] = useState(0);\r\n    const [errors, setErrors] = useState({});\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n    \r\n\r\n    const validateStep = () => {\r\n        const currentFields = steps[currentStep].fields;\r\n        const newErrors = {};\r\n        let isValid = true;\r\n\r\n        currentFields.forEach(field => {\r\n            if (field.required && !formData[field.id]?.trim()) {\r\n                newErrors[field.id] = `${field.label} is required`;\r\n                isValid = false;\r\n            }\r\n        });\r\n\r\n        setErrors(newErrors);\r\n        return isValid;\r\n    };\r\n\r\n    const validateForm = () => {\r\n        const allErrors = {};\r\n        let isValid = true;\r\n    \r\n        steps.forEach(step => {\r\n            step.fields.forEach(field => {\r\n                if (field.required && !formData[field.id]?.trim()) {\r\n                    allErrors[field.id] = `${field.label} is required`;\r\n                    isValid = false;\r\n                } else if (['powerOutlets', 'numTables', 'seatingCapacity', 'teacherInvitation', 'teacherRegistration'].includes(field.id) && isNaN(formData[field.id])) {\r\n                    allErrors[field.id] = `${field.label} must be a number`;\r\n                    isValid = false;\r\n                }\r\n            });\r\n        });\r\n    \r\n        setErrors(allErrors);\r\n        return isValid;\r\n    };\r\n    \r\n\r\n    const handleNext = () => {\r\n        if (validateStep()) {\r\n            setCurrentStep(prev => prev + 1);\r\n            window.scrollTo(0, 0);\r\n        } else {\r\n            toast.error(\"Please fill in all required fields before proceeding\");\r\n        }\r\n    };\r\n\r\n    const handlePrevious = () => {\r\n        setCurrentStep(prev => prev - 1);\r\n        window.scrollTo(0, 0);\r\n    };\r\n\r\n    const handleInputChange = (fieldId, value) => {\r\n        dispatch({ type: 'SET_FIELD', field: fieldId, value });\r\n        if (errors[fieldId]) {\r\n            setErrors(prev => ({ ...prev, [fieldId]: '' }));\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (!validateForm()) {\r\n            toast.error(\"Please fill in all required fields\");\r\n            return;\r\n        }\r\n\r\n        setIsSubmitting(true);\r\n\r\n        try {\r\n            // Transform the form data to match your backend's expected structure\r\n            const transformedData = {\r\n                hallDimension: formData.hallDimension,\r\n                isEnclosedHall: formData.isEnclosedHall, // Adjust this line\r\n                canBeDarkened: formData.canBeDarkened,\r\n                hasCooling: formData.hasCooling,\r\n                isGroundFloor: formData.isGroundFloor,\r\n                hasStorageSpace: formData.hasStorageSpace,\r\n                powerOutlets: parseInt(formData.powerOutlets) || 0, // Ensure it's an integer\r\n                numTables: parseInt(formData.numTables) || 0, // Ensure it's an integer\r\n                vrSpace: formData.vrSpace,\r\n                hasWifi: formData.hasWifi,\r\n            \r\n                lectureHallArea: formData.lectureHallArea,\r\n                seatingCapacity: parseInt(formData.seatingCapacity) || 0, // Ensure it's an integer\r\n                hasAVFacilities: formData.hasAVFacilities,\r\n                distanceFromExhibition: formData.distanceFromExhibition,\r\n            \r\n                accommodationProvided: formData.accommodationProvided,\r\n                localTransportation: formData.localTransportation,\r\n                secureParkingSpace: formData.secureParkingSpace,\r\n                manpowerForLoading: formData.manpowerForLoading,\r\n            \r\n                contactPersonName: formData.contactPersonName,\r\n                contactPersonMobile: formData.contactPersonMobile,\r\n                contactPersonEmail: formData.contactPersonEmail,\r\n                venueLocation: formData.venueLocation,\r\n            \r\n                teacherInvitation: parseInt(formData.teacherInvitation) || 0, // Ensure it's an integer\r\n                teacherRegistration: parseInt(formData.teacherRegistration) || 0, // Ensure it's an integer\r\n                providesWritingMaterials: formData.providesWritingMaterials,\r\n                providesRefreshments: formData.providesRefreshments,\r\n            \r\n                quizForSchoolStudents: formData.quizForSchoolStudents,\r\n                quizTeamSelection: formData.quizTeamSelection,\r\n                quizArrangements: formData.quizArrangements,\r\n                quizRefreshments: formData.quizRefreshments,\r\n            };\r\n            \r\n\r\n            console.log('Submitting transformed data:', transformedData);\r\n\r\n            const response = await fetch('http://localhost:3000/iprexhibition', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify(transformedData)\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || `Submission failed with status ${response.status}`);\r\n            }\r\n\r\n            toast.success(\"Form submitted successfully!\");\r\n            setTimeout(() => {\r\n                dispatch({ type: 'RESET_FORM' });\r\n                navigate('/success');\r\n            }, 2000);\r\n\r\n        } catch (error) {\r\n            console.error('Submission error:', error);\r\n            toast.error(error.message || \"Error submitting form. Please try again.\");\r\n        } finally {\r\n            setIsSubmitting(false);\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"max-w-2xl mx-auto p-6 bg-white rounded-lg shadow-lg\">\r\n            <ToastContainer />\r\n            <div className=\"mb-8\">\r\n                <h2 className=\"text-2xl font-bold text-gray-800\">{steps[currentStep].title}</h2>\r\n                <div className=\"mt-2 flex gap-2\">\r\n                    {steps.map((_, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`h-2 flex-1 rounded-full ${\r\n                                index <= currentStep ? 'bg-blue-500' : 'bg-gray-200'\r\n                            }`}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n                {steps[currentStep].fields.map((field) => (\r\n                    <FormField\r\n                        key={field.id}\r\n                        id={field.id}\r\n                        label={field.label}\r\n                        required={field.required}\r\n                        helperText={field.helperText}\r\n                        value={formData[field.id]}\r\n                        onChange={(e) => handleInputChange(field.id, e.target.value)}\r\n                        error={errors[field.id]}\r\n                    />\r\n                ))}\r\n\r\n                <div className=\"flex justify-between mt-6 pt-4 border-t border-gray-200\">\r\n                    {currentStep > 0 && (\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handlePrevious}\r\n                            className=\"px-4 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors\"\r\n                        >\r\n                            Previous\r\n                        </button>\r\n                    )}\r\n                    {currentStep < steps.length - 1 ? (\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={handleNext}\r\n                            className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors\"\r\n                        >\r\n                            Next\r\n                        </button>\r\n                    ) : (\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n                        >\r\n                            Submit\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IPRExForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
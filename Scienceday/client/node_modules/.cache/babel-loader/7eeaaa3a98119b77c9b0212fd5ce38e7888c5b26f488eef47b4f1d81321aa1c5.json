{"ast":null,"code":"var _jsxFileName = \"D:\\\\IPRSCIENCEDAY\\\\client\\\\src\\\\components\\\\CompetitionFields.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompetitionFields = ({\n  competition,\n  onChange\n}) => {\n  if (!competition) {\n    console.error('Competition object is undefined');\n    return null; // or return some placeholder content\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: competition.title || 'Untitled Competition'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), competition.fields && competition.fields.map((field, index) => {\n      if (!field || typeof field !== 'object') {\n        console.error(`Invalid field at index ${index}:`, field);\n        return null;\n      }\n      switch (field.type) {\n        case 'text':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: field.label || `Field ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: field.value || '',\n              onChange: e => onChange(index, e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this);\n        case 'select':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: field.label || `Field ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: field.value || '',\n              onChange: e => onChange(index, e.target.value),\n              children: field.options && field.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option.value,\n                children: option.label\n              }, optionIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this);\n        default:\n          console.warn(`Unknown field type: ${field.type}`);\n          return null;\n      }\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = CompetitionFields;\nexport default CompetitionFields;\nvar _c;\n$RefreshReg$(_c, \"CompetitionFields\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CompetitionFields","competition","onChange","console","error","children","title","fileName","_jsxFileName","lineNumber","columnNumber","fields","map","field","index","type","label","value","e","target","options","option","optionIndex","warn","_c","$RefreshReg$"],"sources":["D:/IPRSCIENCEDAY/client/src/components/CompetitionFields.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst CompetitionFields = ({ competition, onChange }) => {\r\n    if (!competition) {\r\n        console.error('Competition object is undefined');\r\n        return null; // or return some placeholder content\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h3>{competition.title || 'Untitled Competition'}</h3>\r\n            {competition.fields && competition.fields.map((field, index) => {\r\n                if (!field || typeof field !== 'object') {\r\n                    console.error(`Invalid field at index ${index}:`, field);\r\n                    return null;\r\n                }\r\n\r\n                switch (field.type) {\r\n                    case 'text':\r\n                        return (\r\n                            <div key={index}>\r\n                                <label>{field.label || `Field ${index + 1}`}</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={field.value || ''}\r\n                                    onChange={(e) => onChange(index, e.target.value)}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    case 'select':\r\n                        return (\r\n                            <div key={index}>\r\n                                <label>{field.label || `Field ${index + 1}`}</label>\r\n                                <select\r\n                                    value={field.value || ''}\r\n                                    onChange={(e) => onChange(index, e.target.value)}\r\n                                >\r\n                                    {field.options && field.options.map((option, optionIndex) => (\r\n                                        <option key={optionIndex} value={option.value}>\r\n                                            {option.label}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        );\r\n                    default:\r\n                        console.warn(`Unknown field type: ${field.type}`);\r\n                        return null;\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompetitionFields;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
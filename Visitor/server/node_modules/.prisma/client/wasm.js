
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.19.1
 * Query Engine version: 69d742ee20b815d88e17e54db4a2a7a3b30324e3
 */
Prisma.prismaVersion = {
  client: "5.19.1",
  engine: "69d742ee20b815d88e17e54db4a2a7a3b30324e3"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}

/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.RatingsScalarFieldEnum = {
  id: 'id',
  iprRating: 'iprRating',
  fciptRating: 'fciptRating',
  knowledge: 'knowledge',
  explanationsIPR: 'explanationsIPR',
  explanationsFCIPT: 'explanationsFCIPT',
  knowledgeBefore: 'knowledgeBefore',
  knowledgeAfter: 'knowledgeAfter',
  technicalContents: 'technicalContents',
  easeOfUnderstanding: 'easeOfUnderstanding',
  feedbackFormId: 'feedbackFormId'
};

exports.Prisma.FeedbackFormScalarFieldEnum = {
  id: 'id',
  institutionName: 'institutionName',
  website: 'website',
  visitDate: 'visitDate',
  staffName: 'staffName',
  staffEmail: 'staffEmail',
  staffMobile: 'staffMobile',
  totalStudents: 'totalStudents',
  accompanyingStaff: 'accompanyingStaff',
  sources: 'sources',
  campuses: 'campuses',
  best: 'best',
  worst: 'worst',
  suggestions: 'suggestions',
  comments: 'comments',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VisitorScalarFieldEnum = {
  id: 'id',
  institutionName: 'institutionName',
  studentBranch: 'studentBranch',
  studentSem: 'studentSem',
  numStudents: 'numStudents',
  numFaculty: 'numFaculty',
  name: 'name',
  position: 'position',
  email: 'email',
  mobile: 'mobile',
  campus: 'campus',
  ipr_time: 'ipr_time',
  fcipt_time: 'fcipt_time',
  visit_date: 'visit_date',
  visit_time: 'visit_time',
  materials: 'materials',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SchoolScalarFieldEnum = {
  id: 'id',
  name: 'name',
  address: 'address',
  city: 'city',
  pincode: 'pincode',
  affiliationNumber: 'affiliationNumber',
  coordinatorTeacherName: 'coordinatorTeacherName',
  coordinatorTeacherMobile: 'coordinatorTeacherMobile',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccompanyingTeacherScalarFieldEnum = {
  id: 'id',
  name: 'name',
  gender: 'gender',
  requiresAccommodation: 'requiresAccommodation',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompetitionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StudentModel1ScalarFieldEnum = {
  id: 'id',
  participant1Name: 'participant1Name',
  participant1Gender: 'participant1Gender',
  participant1Class: 'participant1Class',
  participant1Accommodation: 'participant1Accommodation',
  participant2Name: 'participant2Name',
  participant2Gender: 'participant2Gender',
  participant2Class: 'participant2Class',
  participant2Accommodation: 'participant2Accommodation',
  additionalRequirements: 'additionalRequirements',
  declaration: 'declaration',
  writeup: 'writeup',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.StudentModel2ScalarFieldEnum = {
  id: 'id',
  participant1Name: 'participant1Name',
  participant1Gender: 'participant1Gender',
  participant1Class: 'participant1Class',
  participant1Accommodation: 'participant1Accommodation',
  participant2Name: 'participant2Name',
  participant2Gender: 'participant2Gender',
  participant2Class: 'participant2Class',
  participant2Accommodation: 'participant2Accommodation',
  additionalRequirements: 'additionalRequirements',
  declaration: 'declaration',
  writeup: 'writeup',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EloquenceEnglishScalarFieldEnum = {
  id: 'id',
  participantName: 'participantName',
  participantGender: 'participantGender',
  participantClass: 'participantClass',
  accommodationRequired: 'accommodationRequired',
  declaration: 'declaration',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EloquenceHindiScalarFieldEnum = {
  id: 'id',
  participantName: 'participantName',
  participantGender: 'participantGender',
  participantClass: 'participantClass',
  accommodationRequired: 'accommodationRequired',
  declaration: 'declaration',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EloquenceGujaratiScalarFieldEnum = {
  id: 'id',
  participantName: 'participantName',
  participantGender: 'participantGender',
  participantClass: 'participantClass',
  accommodationRequired: 'accommodationRequired',
  declaration: 'declaration',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EssayEnglishScalarFieldEnum = {
  id: 'id',
  participantName: 'participantName',
  participantGender: 'participantGender',
  participantClass: 'participantClass',
  accommodationRequired: 'accommodationRequired',
  essayFileUrl: 'essayFileUrl',
  declaration: 'declaration',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EssayHindiScalarFieldEnum = {
  id: 'id',
  participantName: 'participantName',
  participantGender: 'participantGender',
  participantClass: 'participantClass',
  accommodationRequired: 'accommodationRequired',
  essayFileUrl: 'essayFileUrl',
  declaration: 'declaration',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EssayGujaratiScalarFieldEnum = {
  id: 'id',
  participantName: 'participantName',
  participantGender: 'participantGender',
  participantClass: 'participantClass',
  accommodationRequired: 'accommodationRequired',
  essayFileUrl: 'essayFileUrl',
  declaration: 'declaration',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PosterScalarFieldEnum = {
  id: 'id',
  participant1Name: 'participant1Name',
  participant1Gender: 'participant1Gender',
  participant1Class: 'participant1Class',
  participant1Accommodation: 'participant1Accommodation',
  participant1Declaration: 'participant1Declaration',
  participant2Name: 'participant2Name',
  participant2Gender: 'participant2Gender',
  participant2Class: 'participant2Class',
  participant2Accommodation: 'participant2Accommodation',
  participant2Declaration: 'participant2Declaration',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SkitScalarFieldEnum = {
  id: 'id',
  participant1Name: 'participant1Name',
  participant1Gender: 'participant1Gender',
  participant1Class: 'participant1Class',
  participant1Accommodation: 'participant1Accommodation',
  participant2Name: 'participant2Name',
  participant2Gender: 'participant2Gender',
  participant2Class: 'participant2Class',
  participant2Accommodation: 'participant2Accommodation',
  participant3Name: 'participant3Name',
  participant3Gender: 'participant3Gender',
  participant3Class: 'participant3Class',
  participant3Accommodation: 'participant3Accommodation',
  participant4Name: 'participant4Name',
  participant4Gender: 'participant4Gender',
  participant4Class: 'participant4Class',
  participant4Accommodation: 'participant4Accommodation',
  participant5Name: 'participant5Name',
  participant5Gender: 'participant5Gender',
  participant5Class: 'participant5Class',
  participant5Accommodation: 'participant5Accommodation',
  participant6Name: 'participant6Name',
  participant6Gender: 'participant6Gender',
  participant6Class: 'participant6Class',
  participant6Accommodation: 'participant6Accommodation',
  additionalRequirements: 'additionalRequirements',
  declaration: 'declaration',
  videoLink: 'videoLink',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeacherModelScalarFieldEnum = {
  id: 'id',
  teacherName: 'teacherName',
  teacherGender: 'teacherGender',
  accommodationRequired: 'accommodationRequired',
  additionalRequirements: 'additionalRequirements',
  declaration: 'declaration',
  writeup: 'writeup',
  schoolId: 'schoolId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IPRExhibitionFormScalarFieldEnum = {
  id: 'id',
  hallDimension: 'hallDimension',
  isEnclosedHall: 'isEnclosedHall',
  canBeDarkened: 'canBeDarkened',
  hasCooling: 'hasCooling',
  isGroundFloor: 'isGroundFloor',
  hasStorageSpace: 'hasStorageSpace',
  powerOutlets: 'powerOutlets',
  numTables: 'numTables',
  vrSpace: 'vrSpace',
  hasWifi: 'hasWifi',
  lectureHallArea: 'lectureHallArea',
  seatingCapacity: 'seatingCapacity',
  hasAVFacilities: 'hasAVFacilities',
  distanceFromExhibition: 'distanceFromExhibition',
  accommodationProvided: 'accommodationProvided',
  localTransportation: 'localTransportation',
  secureParkingSpace: 'secureParkingSpace',
  manpowerForLoading: 'manpowerForLoading',
  contactPersonName: 'contactPersonName',
  contactPersonMobile: 'contactPersonMobile',
  contactPersonEmail: 'contactPersonEmail',
  venueLocation: 'venueLocation',
  teacherInvitation: 'teacherInvitation',
  teacherRegistration: 'teacherRegistration',
  providesWritingMaterials: 'providesWritingMaterials',
  providesRefreshments: 'providesRefreshments',
  quizForSchoolStudents: 'quizForSchoolStudents',
  quizTeamSelection: 'quizTeamSelection',
  quizArrangements: 'quizArrangements',
  quizRefreshments: 'quizRefreshments'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Ratings: 'Ratings',
  feedbackForm: 'feedbackForm',
  Visitor: 'Visitor',
  School: 'School',
  AccompanyingTeacher: 'AccompanyingTeacher',
  Competition: 'Competition',
  StudentModel1: 'StudentModel1',
  StudentModel2: 'StudentModel2',
  EloquenceEnglish: 'EloquenceEnglish',
  EloquenceHindi: 'EloquenceHindi',
  EloquenceGujarati: 'EloquenceGujarati',
  EssayEnglish: 'EssayEnglish',
  EssayHindi: 'EssayHindi',
  EssayGujarati: 'EssayGujarati',
  Poster: 'Poster',
  Skit: 'Skit',
  TeacherModel: 'TeacherModel',
  IPRExhibitionForm: 'IPRExhibitionForm'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
